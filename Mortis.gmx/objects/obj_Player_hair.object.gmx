<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
owner = noone;
sprite_index = ani_Player_hair;
image_speed = 0;
arms = noone;
hairWhistle = 0;
hairX = 0;
hairY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Determine Hair and Arms
arms = noone;
if (instance_exists(owner)) {
    hairX = 0;
    hairY = 0;
    hairWhistle = (hairWhistle + 1) mod room_speed;
    with (owner) {
        if (is_state("running")) {
            other.sprite_index = ani_Player_hair_running;
            other.arms = ani_Player_running_arms;
            other.image_speed = image_speed;
            switch (round(image_index)) {
                case 0: o = 2; break;
                case 1: o = 2; break;
                case 2: o = 1; break;
                case 8: o = 1; break;
                case 9: o = 2; break;
                case 10: o = 2; break;
                case 11: o = 1; break;
                case 17: o = 1; break;
                case 18: o = 2; break;
                default: o = 0; break;
            }
            other.hairY = o;
        }
        else if (state_contains("slash")) {
            other.sprite_index = ani_Player_hair_slashing;
            other.image_index = min(sprite_get_number(ani_Player_hair_slashing) - 1, image_index);
            other.hairY = -1;
            if (is_state("slash2")) {
                if (round(other.image_index) &gt;= 4) {
                    other.hairY = 0;
                }
            }
            else if (is_state("powerSlash")) {
                switch (round(image_index)) {
                    case 0: ox = 0; oy = 0; break;
                    case 5: ox = -1; break;
                    case 7: ox = 1; break;
                    case 10: ox = 3; oy = -1; break;
                    case 11: ox = 2; oy = -2; break;
                }
                other.hairX = ox;
                other.hairY = oy;
            }
        }
        else if (is_state("springing") or is_state("jumping") or is_state("inAir") or is_state("falling") or is_state("landing")) {
            other.sprite_index = ani_Player_hair_jumping;
            if (is_state("springing") or is_state("jumping")) {
                other.image_index = image_index * 0.5;
            }
            else if (is_state("inAir") or is_state("falling")) {
                other.image_index = 3 + (other.hairWhistle / 2) mod 6;
            }
            else {
                other.image_speed = 0.75;
            }
            o = -2;
            switch (round(image_index)) {
                case 0: o += 2; break;
                case 1: o += 1; break;
                case 3: o += 2; break;
                case 4: o += 2; break;
                case 5: o += 2; break;
                case 6: o += 2; break;
                case 7: o += 2; break;
                case 8: o += 2; break;
                case 10: o += 1; break;
                case 11: o += 2; break;
                default: o = 0; break;
            }
        }
        else if (is_state("idle")) {
            if (other.sprite_index != ani_Player_hair_jumping) {
                other.sprite_index = ani_Player_hair;
                other.image_speed = image_speed;
            }
        }
        else {
            other.sprite_index = noone;
            other.image_speed = 0;
        }
    }
    image_xscale = owner.image_xscale;
    image_yscale = owner.image_yscale;
    x = owner.x + (hairX * image_xscale);
    y = owner.y - hairY;
    depth = owner.depth - 1;
    image_alpha = owner.image_alpha;
    image_blend = owner.image_blend;
}
else {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Hair
if (sprite_index == ani_Player_hair_jumping) {
    sprite_index = ani_Player_hair;
    if (instance_exists(owner)) {
        image_speed = owner.image_speed;
    }
    else {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Body Parts
if (sprite_index != noone) {
    if (instance_exists(owner)) {
        draw_self();
        if (arms != noone) {
            draw_sprite_ext(arms, owner.image_index, owner.x, owner.y, image_xscale, image_yscale, 0, c_white, 1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
