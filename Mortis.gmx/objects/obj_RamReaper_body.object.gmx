<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ani_RamReaper</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
sync_hp(obj_RamReaper_skull);
xscale = 0.5;
yscale = xscale;
invincible = true;
noGravity = true;
image_speed = 0.2;
mSpeed = 1;
dir = -sign(hSpeed);
slashes = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Sine Variables
sine = list_create(2);
hs0 = x;
vs0 = y;
amp = 32;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create States
states = ds_map_create();
state = "floating";
neutralState = state;
state_create("floating", ani_RamReaper, 0.15);
state_create("eyeflash", ani_RamReaper_eyeflash, 0.5);
state_create("summoning", ani_RamReaper_hand, 0.5);
state_create("nudging", ani_RamReaper_hand_nudge, 0.5);
state_create("attacking", ani_RamReaper_scythe, 0.8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Lemniscate Curve
var theta, lx, ly, t, b;
theta = obj_Controller.time / prec;
t = theta * pi / 180;
b = 1 + power(sin(t), 2);
lx = (amp * cos(t)) / b;
ly = (amp * sin(t) * cos(t)) / b;
if (ds_list_size(sine) &gt; 1) {
    hs0 = ds_list_find_value(sine, 0);
    vs0 = ds_list_find_value(sine, 1);
}
ds_list_replace(sine, 0, lx);
ds_list_replace(sine, 1, ly);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Alarm
alarm[0] = room_speed * 0.025;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move Around
if (is_state("floating")) {
    hSpeed = (ds_list_find_value(sine, 0) - hs0);
    vSpeed = (ds_list_find_value(sine, 1) - vs0);
    //show_debug_message("[DBG]: curve" + tuple(hSpeed, vSpeed, hs0, vs0, ds_list_find_value(sine, 0), ds_list_find_value(sine, 1)));
    if (instance_exists(obj_Player)) {
        var angle = (point_direction(x, y, obj_Player.x, obj_Player.y - 48) + 90) * pi / 180;
        vSpeed += mSpeed * cos(angle);
        if (point_distance(x, y, obj_Player.x, obj_Player.y - 48) &gt; 48) {
            hSpeed += mSpeed * sin(angle);
            dir = -sign(hSpeed);
            //show_debug_message("[DBG]: speed" + tuple(angle, hSpeed, vSpeed));
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slash
if (is_state("floating")) {
    if (floor(image_index) == 0) {
        if (collision_rectangle(x + (min(0, -dir) * 24), bbox_top + 37, x + (max(0, -dir) * 16), bbox_bottom - 8, obj_Player, true, false)) {
            hSpeed = 0;
            vSpeed = 0;
            state_change("attacking");
        }
    }
}
if (is_state("attacking")) {
    var fi = floor(image_index);
    if (max(3, min(fi, 12)) == fi) {
        if (slashes == 0) {
            if (melee_attack(noone, "msk_RamReaper_scythe", 0, 6, 3, noone, obj_Player, true, xscale)) {
                slashes += 1;
            }
        }
        image_speed = 1;
    }
    else {
        slashes = 0;
        if (fi &lt;= 2) {
            image_speed = 0.25;
        }
        else if (fi == 13) {
            image_speed = 0.1;
        }
        else {
            image_speed = 0.5;
        }
    }
}
else if (slashes &gt; 0) {
    slashes = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sync with Ram Skull
with (obj_RamReaper_skull) {
    sync_location(other);
}
sync_hp(obj_RamReaper_skull);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Position
x += hSpeed;
y += vSpeed;
show_debug_message("[DBG]: location" + tuple(x, y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Attack
if (is_state("attacking")) {
    state_change("floating");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
