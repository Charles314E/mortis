<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_StartChannel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
image_alpha = 0;
released = 0;
startIndex = 9;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create States
states = ds_map_create();
state = "idle";
neutralState = state;
state_create("idle", sprite_index, 0, 0);
state_create("channelling", sprite_index, 0.5);
state_create("starting", sprite_index, 1, startIndex);
state_create("dispelling", sprite_index, -0.5);
state_create("started", sprite_index, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade In
image_alpha += 0.05;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Alarm
if (image_alpha &lt; 1) {
    alarm[1] = room_speed * 0.025;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to Start
room_transition(rm_CoffinRoom, 0, 0, tsn_FadeBlack, 0.25, -4);
//room_goto(rm_CoffinRoom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Channel
if (image_alpha == 1) {
    if (not is_state("starting")) {
        if (keyboard_check_released(vk_space)) {
            released = 1;
            if (round(image_index) &lt; startIndex - 2) {
                state_change("dispelling");
            }
            else if (round(image_index) == startIndex - 2) {
                released = 2;
                state_change("starting");
            }
        }
        else if (keyboard_check(vk_space)) {
            if (is_state("idle")) {
                if (round(image_index) &lt; startIndex - 2) {
                    state_change("channelling");
                }
            }
            else if (is_state("channelling")) {
                if (round(image_index) == startIndex - 2) {
                    image_speed = 0;
                }
            }
        }
        if (is_state("dispelling")) {
            if (round(image_index) == 0) {
                state_change("idle");
                released = 0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start Game
with (obj_Music) {
    switch_bgm(noone, 0, 0, 0);
}
state_change("started");
alarm[0] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
var tw = sprite_get_width(spr_SpaceText) / 2;
if (is_state("starting")) {
    var sw = (image_index - (startIndex - 1)) / (image_number - (startIndex - 1));
    draw_sprite_ext(spr_SpaceText, 0, x, y, 1 + (sw * 0.5), 1, 0, c_white, 1 - sw);
    draw_sprite_ext(sprite_index, image_index, x - tw - 32, y, -(1 + (sw * 0.5)), 1, 0, c_white, 1 - sw);
    draw_sprite_ext(sprite_index, image_index, x + tw + 32, y, 1 + (sw * 0.5), 1, 0, c_white, 1 - sw);
}
draw_sprite_ext(spr_SpaceText, 0, x, y, 1, 1, 0, c_white, image_alpha);
draw_sprite_ext(sprite_index, image_index, x - tw - 32, y, -1, 1, 0, c_white, image_alpha);
draw_sprite_ext(sprite_index, image_index, x + tw + 32, y, 1, 1, 0, c_white, image_alpha);
if (obj_Controller.debug) {
    draw_text(x, y - 32, state);
    draw_text(x, y - 64, image_index);
    draw_text(x, y - 96, released);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
